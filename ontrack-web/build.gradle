buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.moowork.gradle:gradle-node-plugin:0.11'
    }
}

// Plug-ins

apply plugin: 'base'
apply plugin: 'com.moowork.node'

// Node environment

node {
    version = '4.2.2'
    npmVersion = '4.2.2'
    download = true
}

// Environment

ext {
    cacheDir = gradle.getGradleUserHomeDir() as String ?: "${System.getProperty("user.home")}/.cache/gradle"
    println "Gradle cache dir: ${cacheDir}"
}

task npmCacheConfig(type: NpmTask) {
    description = "Configure the NPM cache"
    def npmCacheDir = "${cacheDir}/caches/npm"
    outputs.files file(npmCacheDir)
    args = [ 'config', 'set', 'cache', npmCacheDir ]
}

task npmPackages(type: NpmTask, dependsOn: npmCacheConfig) {
    description = "Install Node.js packages"
    args = [ 'install' ]
    inputs.files file('package.json')
    outputs.files file('node_modules')
}

task bowerInstall(type: NodeTask, dependsOn: npmPackages) {
    script = file('node_modules/bower/bin/bower')
    args = ["--config.storage.cache=${cacheDir}/caches/bower/cache",
            "--config.storage.packages=${cacheDir}/caches/bower/packages",
            "--config.storage.registry=${cacheDir}/caches/bower/registry",
            '--allow-root',
            'install']
    inputs.files file('bower.json')
    outputs.files file('vendor')
}

// Cleanup

clean.delete << file('build/web')

// Web packaging

task dev(type: NodeTask, dependsOn: bowerInstall) {
    script = file('node_modules/gulp/bin/gulp')
    args = ['dev']
}

task build(type: NodeTask, dependsOn: bowerInstall) {
    script = file('node_modules/gulp/bin/gulp')
    args = ['default', '--version', versioning.info.display]
    inputs.dir file('src')
    inputs.file file('bower.json')
    inputs.file file('gulpfile.js')
    inputs.file file('package.json')
    ext.outputDir = file('build/web/prod')
    outputs.dir outputDir
}

task watch(type: NodeTask, dependsOn: dev) {
    script = file('node_modules/gulp/bin/gulp')
    args = ['watch']
}
